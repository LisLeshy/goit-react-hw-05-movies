{"version":3,"file":"static/js/829.70baa009.chunk.js","mappings":"0NAGaA,EAAYC,EAAAA,GAAAA,IAAH,4IAgBTC,GALMD,EAAAA,GAAAA,IAAH,4CAKQA,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,sEAIRG,EAAUH,EAAAA,GAAAA,IAAH,2KASPI,EAAKJ,EAAAA,GAAAA,GAAH,wQAcFK,EAAKL,EAAAA,GAAAA,GAAH,2J,SCrCFM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzBC,QAAQC,IAAIF,GACZ,IAAMG,GAAWC,EAAAA,EAAAA,MAEjB,OACA,SAACZ,EAAD,WACE,SAACM,EAAD,UACGE,EAAOK,KAAI,SAACC,GAAD,OACV,SAACT,EAAD,WACE,UAACH,EAAD,CAAUa,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAApD,WACE,SAACP,EAAD,CACUe,IAAKL,EAAMM,YAdd,kCAeuBN,EAAMM,YACjC,4HAGDC,IAAKP,EAAMQ,SAEb,wBAAKR,EAAMQ,YAVNR,EAAME,GADL,OAkBnB,C,8IChCYhB,EAAYC,EAAAA,GAAAA,IAAH,4IASTsB,EAAOtB,EAAAA,GAAAA,KAAH,mDAKJuB,EAAQvB,EAAAA,GAAAA,MAAH,uIAQLwB,EAASxB,EAAAA,GAAAA,OAAH,sZ,SCYnB,EA9BgB,WACb,OAA0ByB,EAAAA,EAAAA,UAAS,IAAnC,eAAOZ,EAAP,KAAca,EAAd,KACC,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAYH,EAAOI,IAAI,SACzBD,IACJE,EAAAA,EAAAA,IAAgBF,GAAWG,KAAKV,EACnC,GAAE,CAACI,IAWJ,OACI,UAAC/B,EAAD,YACA,UAACuB,EAAD,CAAMe,SAPO,SAACC,GACdA,EAAEC,iBACFR,EAAU,CAACJ,MAAAA,GACd,EAIG,WACI,SAACJ,EAAD,CAAOiB,SAZO,SAACF,GACnBV,EAASU,EAAEG,OAAOC,MACrB,EAUuCC,KAAK,UACrC,SAACnB,EAAD,CAAQmB,KAAK,SAAb,wBAEJ,SAACrC,EAAA,EAAD,CAAYC,OAAQM,MAG3B,C,+LCjCD+B,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAgB,mCAAG,sGAGpBF,EAAAA,EAAAA,IAAA,sCAAyCC,IAHrB,uBAEpBE,EAFoB,EAE5BC,KAAQD,QAFoB,kBAIvBA,GAJuB,2CAAH,qDAOhBE,EAAY,mCAAG,WAAMlC,GAAN,yFACH6B,EAAAA,EAAAA,IAAA,iBACX7B,EADW,oBACG8B,EADH,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZb,EAAe,mCAAG,WAAMR,GAAN,yFAGnBiB,EAAAA,EAAAA,IAAA,gCACiBC,EADjB,mBACmClB,EADnC,gDAHmB,uBAEnBoB,EAFmB,EAE3BC,KAAQD,QAFmB,kBAMtBA,GANsB,2CAAH,sDASfG,EAAe,mCAAG,WAAMnC,GAAN,yFAGnB6B,EAAAA,EAAAA,IAAA,iBAAoB7B,EAApB,4BAA0C8B,EAA1C,oBAHmB,uBAEnBM,EAFmB,EAE3BH,KAAQG,KAFmB,kBAItBA,GAJsB,2CAAH,sDAOfC,EAAe,mCAAG,WAAMrC,GAAN,yFAGnB6B,EAAAA,EAAAA,IAAA,iBACE7B,EADF,4BACwB8B,EADxB,2BAHmB,uBAEnBE,EAFmB,EAE3BC,KAAQD,QAFmB,kBAMtBA,GANsB,2CAAH,qD","sources":["components/moviesList/MoviesList.styled.jsx","components/moviesList/MoviesList.jsx","pages/movies/movies,styled.jsx","pages/movies/Movies.jsx","servises/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n max-width: 1200px;\n  width: 100%;\n  fontSize: 40;\n  color: '#010101';\n  margin: 0 auto;\n  padding: 0 30px;\n\n`;\n\n\nexport const IMG = styled.img`\n\n  width: 280px;\n`;\n\nexport const ListLink = styled(NavLink)`\n  text-decoration: none;\n  color: #2e2e2e;\n`;\nexport const ImgList = styled.img`\nmargin-top: 30px;\n  display: block;\n  width:100%;\n  height: 85%;\n  border-radius: 10px;\n  box-shadow: 0px 0px 05px 0px rgba(0, 0, 0, 1);\n  \n`;\nexport const Li = styled.li`\n  border-radius: 5px;\n\n  transition-property: scale;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition: all 1s ease-out;\n\n  cursor: pointer;\n  &:hover {\n    scale: 1.05;\n  }\n\n`;\nexport const Ul = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-column-gap: 30px;\n  grid-row-gap: 70px;\n`;\n","import {  useLocation } from \"react-router-dom\"\nimport PropTypes from \"prop-types\";\nimport {  Container, Ul, Li, ListLink, ImgList} from \"./MoviesList.styled\";\n// import plug from \"../images/plug.png\"\n\n\nconst BASE_IMG_URL = \"https://image.tmdb.org/t/p/w500\";\n// const noPoster = \"https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj\"\n\nexport const MoviesList = ({ movies }) => {\n    console.log(movies)\n    const location = useLocation();\n    \n    return (\n    <Container>\n      <Ul>\n        {movies.map((movie) => (\n          <Li key={movie.id}>\n            <ListLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <ImgList\n                        src={movie.poster_path ?\n                            (BASE_IMG_URL + movie.poster_path):(\n                 \"https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj\"\n              )}\n                        \n                alt={movie.title}\n              />\n              <h2>{movie.title}</h2>\n            </ListLink>\n          </Li>\n        ))}\n      </Ul>\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n    \n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n max-width: 1200px;\n  width: 100%;\n  fontSize: 40;\n  color: '#010101';\n  margin: 0 auto;\n  padding: 0 30px;\n\n`;\nexport const Form = styled.form`\n  text-align: center;\n  \n`;\n\nexport const Input = styled.input`\n  margin-right: 15px;\n  font-size: 25px;\n  outline: none;\n  border: none;\n border-bottom: 2px solid blue;\n`;\n\nexport const Button = styled.button`\n  \n  border-radius: 4px;\n  border: none;\n   padding: 8px 12px;\n  // margin-right: 15px;\n  color: blue;\n  text-decoration: none;\n  border-radius: 4px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n  &:hover {\n    color: #3a7223;\n    background: #fff033;\n  }\n\n`;","import { useEffect, useState } from \"react\"\nimport { getFilmsByQuery } from \"servises/api\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { MoviesList } from \"components/moviesList/MoviesList\";\nimport { Input, Container, Form, Button } from \"./movies,styled\";\n\n const Movies = () => {\n   const [movie, setMovie] = useState([]);\n    const [query, setQuery] = useState('');\n    const [params, setParams] = useSearchParams();\n\n    useEffect(() => {\n        const movieName = params.get('query')\n        if(!movieName) return;\n        getFilmsByQuery(movieName).then(setMovie)\n    }, [params]);\n\n    const onInputChange = (e) => {\n        setQuery(e.target.value);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setParams({query})\n    }\n\n    return(\n        <Container>\n        <Form onSubmit={onSubmit}>\n            <Input onChange={onInputChange} type=\"text\" />\n            <Button type=\"submit\">Search</Button>\n        </Form>\n        <MoviesList movies={movie}/>\n        </Container>\n    )\n};\nexport default Movies","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ec14426c2f48f894f7b9105cd8c876c5';\n\nexport const getTrendingFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return results;\n};\n\nexport const getFilmsById = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getFilmsByQuery = async query => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query='${query}'&language=en-US&page=1&include_adult=false`\n  );\n  return results;\n};\n\nexport const getMovieCredits = async id => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return cast;\n};\n\nexport const getMovieReviews = async id => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return results;\n};\n"],"names":["Container","styled","ListLink","NavLink","ImgList","Li","Ul","MoviesList","movies","console","log","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","title","Form","Input","Button","useState","setMovie","query","setQuery","useSearchParams","params","setParams","useEffect","movieName","get","getFilmsByQuery","then","onSubmit","e","preventDefault","onChange","target","value","type","axios","API_KEY","getTrendingFilms","results","data","getFilmsById","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}